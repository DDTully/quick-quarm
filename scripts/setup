#!/bin/bash

SCRIPTDIR=${BASH_SOURCE%/*}

if [ ! -f $SCRIPTDIR/../lib/qq-functions ]; then
    echo "Cannot load libraries"
    exit
else
    . $SCRIPTDIR/../lib/qq-functions
    load_variables 
fi

### Main ###=======================================================

get_options "$@"

if [ "$EUID" -ne 0 ]
    then echo "Please run setup as root"
    exit
fi

# Get current variables or their defaults
QQUSER=$([ ! -z "${QQUSER}" ] && echo "$QQUSER" || echo "$SUDO_USER")
SERVERREPO=$([ ! -z "${SERVERREPO}" ] && echo "$SERVERREPO" || echo "$DEFAULT_SERVERREPO")
DBHOST=$([ ! -z "${DBHOST}" ] && echo "$DBHOST" || echo "$DEFAULT_DBHOST")
DBNAME=$([ ! -z "${DBNAME}" ] && echo "$DBNAME" || echo "$DEFAULT_DBWORD")
DBUSER=$([ ! -z "${DBUSER}" ] && echo "$DBUSER" || echo "$DEFAULT_DBWORD")
DBPASS=$([ ! -z "${DBPASS}" ] && echo "$DBPASS" || echo "$DEFAULT_DBWORD")
HOSTIP=$([ ! -z "${HOSTIP}" ] && echo "$HOSTIP" || echo "$DEFAULT_HOSTIP")
WORLDKEY=$([ ! -z "${WORLDKEY}" ] && echo "$WORLDKEY" || echo "$DEFAULT_WORLDKEY")

if [ "$OPT_OPTS" = true ]; then
    printf "\nOptions set: "

    if [ "$OPT_DEBUG" = true ]; then
        printf "DEBUG "
    fi
    if [ "$OPT_VERBOSE" = true ]; then
        printf "VERBOSE "
    fi
    if [ "$OPT_FORCE" = true ]; then
        printf "FORCE "
    fi
    if [ "$OPT_CLEAN" = true ]; then
        printf "CLEAN "
    fi
    printf "\n"
fi

printf "
Detected $QQDIR as Quick Quarm home (user: $QQUSER)

The defaults are a great starting point, so it's safe to accept them as is to get up and running.
However, if you have a cloned repo of SecretsOTheP/EQMacEmu that you are using for development, feel free to use that instead.

If you are using your own repo, make sure you've setup your git SSH key, and git username/email BEFORE continuing.

"

# Obtain user input variables, supplying the current variables as default options
QQUSER=$(read_input "Install user" "$QQUSER")
SERVERREPO=$(read_input "EQMacEmu repository" "$SERVERREPO")
DBHOST=$(read_input "Database host" "$DBHOST")
DBNAME=$(read_input "Database name" "$DBNAME")
DBUSER=$(read_input "Database username" "$DBUSER")
DBPASS=$(read_input "Database password" "$DBPASS")
HOSTIP=$(read_input "Host address" "$HOSTIP")

DBEXISTS=$(mysql_db_exists);

if [ $DBEXISTS ]; then
    printf "\nDatabase '$DBNAME' already exists, will not destroy it\n"
fi

if [ "$OPT_DEBUG" = true ]; then 
    enable_debug
fi

write_variables
load_variables

printf "\nBeginning setup:\n"

. "$QQDIR/scripts/install-deps"
. "$QQDIR/scripts/download-source"

if [ -z "$DBEXISTS" ] || [ "$OPT_CLEAN" = true ]; then
    . "$QQDIR/scripts/install-database"
else 
    log "DATABASE" "Database $DBNAME already exists, updating..."
    . "$QQDIR/scripts/update-database"
fi

. "$QQDIR/scripts/build-source"
. "$QQDIR/scripts/install-bin"
. "$QQDIR/scripts/update-config"
. "$QQDIR/scripts/install-systemd"

printf "
===== DONE!!! =====

Congratulations! Everything completed successfully, and you're one step closer to your own Quarm server.

Next Steps:

 * New users: Download the TAKP v2.2 Client and the associated PQ package zip file from PQ Discord #server-files
 * Existing users: Copy your existing TAKP folder to another separate folder from your normal PQ install.
 * Edit the file eqhost.txt file and change loginserver.takproject.net:6000 to 192.168.1.100:6000
 * Start your client (run as Administrator, and set compatibility options if needed)
 * Login as whatever username/password you want to use (this will fail and is expected).  Click Ok, and hit [ENTER] again.
 * You should see your Quick Quarm EQ server in the list: select it, create a character, and enter the world.
 * On your Quick Quarm host, run ./scripts/eq-makegm -l LOGINACCOUNT
 * If you are already logged in, enter '/sit', '/camp login', then log back in to activate GM powers.

 "
