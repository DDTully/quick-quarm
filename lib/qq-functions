export SCRIPTDIR=${BASH_SOURCE%/*}
export QQDIR=$(dirname -- $(realpath $SCRIPTDIR))

export DEFAULT_SERVERREPO='https://github.com/SecretsOTheP/EQMacEmu.git'
export DEFAULT_DBHOST='localhost'
export DEFAULT_DBWORD='quarm'
export DEFAULT_HOSTIP=$(hostname -I | sed -z 's/[[:space:]]//')
export DEFAULT_WORLDKEY=$(uuidgen)

export TEMPLATE_EQEMUCONFIG="$QQDIR/files/eqemu_config.json.tmpl"
export TEMPLATE_LOGININI="$QQDIR/files/login.ini.tmpl"



eq_account_status() {
    mysql_exec_as $USER "UPDATE account SET status = $2 WHERE name = '$1'"
}

mysql_import() {
    log "MYSQL" "Importing: $DBNAME < $1"
    exec_cmd_as $USER "/usr/bin/mysql $MYSQLCS < $1" "nolog"
}

mysql_exec_as() {
    log "MYSQL" "Executing: $2 (as $1)"
    CONNECT_STRING=$([ "$1" = "root" ] && echo "" || echo "$MYSQLCS")
    exec_cmd_as "$1" "/usr/bin/mysql $CONNECT_STRING <<< \"$2\"" "nolog"
}

mysql_db_exists() {
    EXISTS=$(mysql_exec_as "root" "SHOW DATABASES LIKE '$1'" "nolog")
    echo $EXISTS
}

exec_cmd_as() {
    DOLOG=true
    if [ "$3" == "nolog" ] || [ "$OPT_NOLOG" = true ]; then
        DOLOG=false
    fi
    $DOLOG && log "CMD" "Running: $2 (as $1)" 
    OUTPUT=$(eval sudo -E -u $1 -- $2)
    RC=$?
    if [ $RC -ne 0 ]; then
        $DOLOG && log "CMD" "Failed: ($RC) $2"
        exit 1
    fi
}

write_variables() {
    ENVFILE=$QQDIR/etc/.env

    printf "\nWriting configuration to $ENVFILE\n"
    exec_cmd_as $QQUSER "printf \"export QQDIR='$QQDIR'\nexport QQUSER='$QQUSER'\nexport SERVERREPO='$SERVERREPO'\nexport DBHOST=$DBHOST\nexport DBNAME=$DBNAME\nexport DBUSER=$DBUSER\nexport DBPASS=$DBPASS\nexport HOSTIP=$HOSTIP\nexport WORLDKEY=$WORLDKEY\" > $ENVFILE" "nolog"
}

load_variables() {
    ENVFILE="$QQDIR/etc/.env"
    if [ -f $ENVFILE ]; then
        source $ENVFILE
        export MYSQLCS="-u$DBUSER -p$DBPASS $DBNAME"
    fi
}

read_input() {
    read -p "$1 [$2]: " INPUT
    if [ -z $INPUT ]; then
        INPUT=$2
    fi
    echo $INPUT
}

get_options() {
    local OPTIND
    export OPT_DEBUG=false
    export OPT_NOLOG=true
    while getopts ":d:v" opt ; do
        case "$opt" in
            d)
                export OPT_DEBUG=true
                ;;
            v)
                export OPT_NOLOG=false
                ;;
        esac
    done 
    shift $((OPTIND-1))
}

get_eq_options() {
    local OPTIND
    EQ_LOGIN=false
    while getopts ":l:" opt ; do
        case "$opt" in
            l)
                EQ_LOGIN=$OPTARG
                ;;
        esac
    done 
    shift $((OPTIND-1))
}

pushd() {
    command pushd "$@" > /dev/null
}

popd() {
    command popd "$@" > /dev/null
}

exit_if_not_root() {
    if [ "$EUID" -ne 0 ]
        then echo "Please run this script as root"
        exit 9
    fi
}

enable_debug() {
    set -x
}

log() {
    printf "%12s %s\n" "[$1]" "$2"
}